package model;
// default package
// Generated Nov 20, 2014 1:00:53 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Classes generated by hbm2java
 */
@Entity
@Table(name = "classes", catalog = "hibernate")
public class Classes implements java.io.Serializable {

	private Integer classId;
	private SystemUser systemUserByCreatedBy;
	private Department department;
	private SystemUser systemUserByLastUpdatedBy;
	private int classCode;
	private String className;
	private Date creationTimestamp;
	private Date lastUpdatedTimestamp;
	private Set<ClassSection> classSections = new HashSet<ClassSection>(0);

	public Classes() {
	}

	public Classes(SystemUser systemUserByCreatedBy, Department department,
			SystemUser systemUserByLastUpdatedBy, int classCode,
			String className, Date creationTimestamp, Date lastUpdatedTimestamp) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.department = department;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.classCode = classCode;
		this.className = className;
		this.creationTimestamp = creationTimestamp;
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
	}

	public Classes(SystemUser systemUserByCreatedBy, Department department,
			SystemUser systemUserByLastUpdatedBy, int classCode,
			String className, Date creationTimestamp,
			Date lastUpdatedTimestamp, Set<ClassSection> classSections) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.department = department;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.classCode = classCode;
		this.className = className;
		this.creationTimestamp = creationTimestamp;
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
		this.classSections = classSections;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "class_id", unique = true, nullable = false)
	public Integer getClassId() {
		return this.classId;
	}

	public void setClassId(Integer classId) {
		this.classId = classId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public SystemUser getSystemUserByCreatedBy() {
		return this.systemUserByCreatedBy;
	}

	public void setSystemUserByCreatedBy(SystemUser systemUserByCreatedBy) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "department_id", nullable = false)
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "last_updated_by", nullable = false)
	public SystemUser getSystemUserByLastUpdatedBy() {
		return this.systemUserByLastUpdatedBy;
	}

	public void setSystemUserByLastUpdatedBy(
			SystemUser systemUserByLastUpdatedBy) {
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
	}

	@Column(name = "class_code", nullable = false)
	public int getClassCode() {
		return this.classCode;
	}

	public void setClassCode(int classCode) {
		this.classCode = classCode;
	}

	@Column(name = "class_name", nullable = false, length = 100)
	public String getClassName() {
		return this.className;
	}

	public void setClassName(String className) {
		this.className = className;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_timestamp", nullable = false, length = 19)
	public Date getCreationTimestamp() {
		return this.creationTimestamp;
	}

	public void setCreationTimestamp(Date creationTimestamp) {
		this.creationTimestamp = creationTimestamp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_timestamp", nullable = false, length = 19)
	public Date getLastUpdatedTimestamp() {
		return this.lastUpdatedTimestamp;
	}

	public void setLastUpdatedTimestamp(Date lastUpdatedTimestamp) {
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classes")
	public Set<ClassSection> getClassSections() {
		return this.classSections;
	}

	public void setClassSections(Set<ClassSection> classSections) {
		this.classSections = classSections;
	}

}
