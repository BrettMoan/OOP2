package model;
// default package
// Generated Nov 20, 2014 1:09:15 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ClassSection generated by hbm2java
 */
@Entity
@Table(name = "class_section", catalog = "hibernate")
public class ClassSection implements java.io.Serializable {

	private Integer classSectionId;
	private Employee employee;
	private SystemUser systemUserByCreatedBy;
	private Classes classes;
	private SystemUser systemUserByLastUpdatedBy;
	private int year;
	private Integer classSectionNumber;
	private String classSectionSchedule;
	private Date creationTimestamp;
	private Date lastUpdatedTimestamp;
//	private Set<StudentClassSection> studentClassSections = new HashSet<StudentClassSection>(
//			0);

	public ClassSection() {
	}

	public ClassSection(Employee employee, SystemUser systemUserByCreatedBy,
			Classes classes, SystemUser systemUserByLastUpdatedBy, int year,
			String classSectionSchedule) {
		this.employee = employee;
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.classes = classes;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.year = year;
		this.classSectionSchedule = classSectionSchedule;
	}

	public ClassSection(Employee employee, SystemUser systemUserByCreatedBy,
			Classes classes, SystemUser systemUserByLastUpdatedBy, int year,
			Integer classSectionNumber, String classSectionSchedule,
			Date creationTimestamp, Date lastUpdatedTimestamp
//			,Set<StudentClassSection> studentClassSections
			) {
		this.employee = employee;
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.classes = classes;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.year = year;
		this.classSectionNumber = classSectionNumber;
		this.classSectionSchedule = classSectionSchedule;
		this.creationTimestamp = creationTimestamp;
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
//		this.studentClassSections = studentClassSections;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "class_section_id", unique = true, nullable = false)
	public Integer getClassSectionId() {
		return this.classSectionId;
	}

	public void setClassSectionId(Integer classSectionId) {
		this.classSectionId = classSectionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "instuctor_id", nullable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public SystemUser getSystemUserByCreatedBy() {
		return this.systemUserByCreatedBy;
	}

	public void setSystemUserByCreatedBy(SystemUser systemUserByCreatedBy) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_id", nullable = false)
	public Classes getClasses() {
		return this.classes;
	}

	public void setClasses(Classes classes) {
		this.classes = classes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "last_updated_by", nullable = false)
	public SystemUser getSystemUserByLastUpdatedBy() {
		return this.systemUserByLastUpdatedBy;
	}

	public void setSystemUserByLastUpdatedBy(
			SystemUser systemUserByLastUpdatedBy) {
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
	}

	@Column(name = "year", nullable = false)
	public int getYear() {
		return this.year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	@Column(name = "class_section_number")
	public Integer getClassSectionNumber() {
		return this.classSectionNumber;
	}

	public void setClassSectionNumber(Integer classSectionNumber) {
		this.classSectionNumber = classSectionNumber;
	}

	@Column(name = "class_section_schedule", nullable = false, length = 40)
	public String getClassSectionSchedule() {
		return this.classSectionSchedule;
	}

	public void setClassSectionSchedule(String classSectionSchedule) {
		this.classSectionSchedule = classSectionSchedule;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_timestamp", length = 19)
	public Date getCreationTimestamp() {
		return this.creationTimestamp;
	}

	public void setCreationTimestamp(Date creationTimestamp) {
		this.creationTimestamp = creationTimestamp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_timestamp", length = 19)
	public Date getLastUpdatedTimestamp() {
		return this.lastUpdatedTimestamp;
	}

	public void setLastUpdatedTimestamp(Date lastUpdatedTimestamp) {
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classSection")
//	public Set<StudentClassSection> getStudentClassSections() {
//		return this.studentClassSections;
//	}
//
//	public void setStudentClassSections(
//			Set<StudentClassSection> studentClassSections) {
//		this.studentClassSections = studentClassSections;
//	}

}
