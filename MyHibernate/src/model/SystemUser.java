package model;
// default package
// Generated Nov 20, 2014 1:09:15 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SystemUser generated by hbm2java
 */
@Entity
@Table(name = "system_user", catalog = "hibernate")
public class SystemUser implements java.io.Serializable {

	private Integer systemUserId;
	private SystemUser systemUserByCreatedBy;
	private SystemUser systemUserByLastUpdatedBy;
	private String systemUserName;
	private int systemUserGroupId;
	private int systemUserType;
	private Date creationTimestamp;
	private Date lastUpdatedTimestamp;
	private Set<ClassSection> classSectionsForLastUpdatedBy = new HashSet<ClassSection>(
			0);
	private Set<ClassSection> classSectionsForCreatedBy = new HashSet<ClassSection>(
			0);
	private Set<Department> departmentsForLastUpdatedBy = new HashSet<Department>(
			0);
	private Set<SystemUser> systemUsersForLastUpdatedBy = new HashSet<SystemUser>(
			0);
	private Set<SystemUser> systemUsersForCreatedBy = new HashSet<SystemUser>(0);
	private Set<Student> studentsForLastUpdatedBy = new HashSet<Student>(0);
	private Set<Student> studentsForCreatedBy = new HashSet<Student>(0);
//	private Set<StudentClassSection> studentClassSectionsForLastUpdatedBy = new HashSet<StudentClassSection>(
//			0);
	private Set<Classes> classesesForCreatedBy = new HashSet<Classes>(0);
	private Set<Classes> classesesForLastUpdatedBy = new HashSet<Classes>(0);
	private Set<Department> departmentsForCreatedBy = new HashSet<Department>(0);
	private Set<Employee> employeesForCreatedBy = new HashSet<Employee>(0);
	private Set<Employee> employeesForLastUpdatedBy = new HashSet<Employee>(0);
//	private Set<StudentClassSection> studentClassSectionsForCreatedBy = new HashSet<StudentClassSection>(
//			0);

	public SystemUser() {
	}

	public SystemUser(SystemUser systemUserByCreatedBy,
			SystemUser systemUserByLastUpdatedBy, String systemUserName,
			int systemUserGroupId, int systemUserType) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.systemUserName = systemUserName;
		this.systemUserGroupId = systemUserGroupId;
		this.systemUserType = systemUserType;
	}

	public SystemUser(SystemUser systemUserByCreatedBy,
			SystemUser systemUserByLastUpdatedBy, String systemUserName,
			int systemUserGroupId, int systemUserType, Date creationTimestamp,
			Date lastUpdatedTimestamp,
			Set<ClassSection> classSectionsForLastUpdatedBy,
			Set<ClassSection> classSectionsForCreatedBy,
			Set<Department> departmentsForLastUpdatedBy,
			Set<SystemUser> systemUsersForLastUpdatedBy,
			Set<SystemUser> systemUsersForCreatedBy,
			Set<Student> studentsForLastUpdatedBy,
			Set<Student> studentsForCreatedBy,
//			Set<StudentClassSection> studentClassSectionsForLastUpdatedBy,
			Set<Classes> classesesForCreatedBy,
			Set<Classes> classesesForLastUpdatedBy,
			Set<Department> departmentsForCreatedBy,
			Set<Employee> employeesForCreatedBy,
			Set<Employee> employeesForLastUpdatedBy
//			,Set<StudentClassSection> studentClassSectionsForCreatedBy
			) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.systemUserName = systemUserName;
		this.systemUserGroupId = systemUserGroupId;
		this.systemUserType = systemUserType;
		this.creationTimestamp = creationTimestamp;
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
		this.classSectionsForLastUpdatedBy = classSectionsForLastUpdatedBy;
		this.classSectionsForCreatedBy = classSectionsForCreatedBy;
		this.departmentsForLastUpdatedBy = departmentsForLastUpdatedBy;
		this.systemUsersForLastUpdatedBy = systemUsersForLastUpdatedBy;
		this.systemUsersForCreatedBy = systemUsersForCreatedBy;
		this.studentsForLastUpdatedBy = studentsForLastUpdatedBy;
		this.studentsForCreatedBy = studentsForCreatedBy;
//		this.studentClassSectionsForLastUpdatedBy = studentClassSectionsForLastUpdatedBy;
		this.classesesForCreatedBy = classesesForCreatedBy;
		this.classesesForLastUpdatedBy = classesesForLastUpdatedBy;
		this.departmentsForCreatedBy = departmentsForCreatedBy;
		this.employeesForCreatedBy = employeesForCreatedBy;
		this.employeesForLastUpdatedBy = employeesForLastUpdatedBy;
//		this.studentClassSectionsForCreatedBy = studentClassSectionsForCreatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "system_user_id", unique = true, nullable = false)
	public Integer getSystemUserId() {
		return this.systemUserId;
	}

	public void setSystemUserId(Integer systemUserId) {
		this.systemUserId = systemUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public SystemUser getSystemUserByCreatedBy() {
		return this.systemUserByCreatedBy;
	}

	public void setSystemUserByCreatedBy(SystemUser systemUserByCreatedBy) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "last_updated_by", nullable = false)
	public SystemUser getSystemUserByLastUpdatedBy() {
		return this.systemUserByLastUpdatedBy;
	}

	public void setSystemUserByLastUpdatedBy(
			SystemUser systemUserByLastUpdatedBy) {
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
	}

	@Column(name = "system_user_name", nullable = false, length = 20)
	public String getSystemUserName() {
		return this.systemUserName;
	}

	public void setSystemUserName(String systemUserName) {
		this.systemUserName = systemUserName;
	}

	@Column(name = "system_user_group_id", nullable = false)
	public int getSystemUserGroupId() {
		return this.systemUserGroupId;
	}

	public void setSystemUserGroupId(int systemUserGroupId) {
		this.systemUserGroupId = systemUserGroupId;
	}

	@Column(name = "system_user_type", nullable = false)
	public int getSystemUserType() {
		return this.systemUserType;
	}

	public void setSystemUserType(int systemUserType) {
		this.systemUserType = systemUserType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_timestamp", length = 19)
	public Date getCreationTimestamp() {
		return this.creationTimestamp;
	}

	public void setCreationTimestamp(Date creationTimestamp) {
		this.creationTimestamp = creationTimestamp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_timestamp", length = 19)
	public Date getLastUpdatedTimestamp() {
		return this.lastUpdatedTimestamp;
	}

	public void setLastUpdatedTimestamp(Date lastUpdatedTimestamp) {
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByLastUpdatedBy")
	public Set<ClassSection> getClassSectionsForLastUpdatedBy() {
		return this.classSectionsForLastUpdatedBy;
	}

	public void setClassSectionsForLastUpdatedBy(
			Set<ClassSection> classSectionsForLastUpdatedBy) {
		this.classSectionsForLastUpdatedBy = classSectionsForLastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByCreatedBy")
	public Set<ClassSection> getClassSectionsForCreatedBy() {
		return this.classSectionsForCreatedBy;
	}

	public void setClassSectionsForCreatedBy(
			Set<ClassSection> classSectionsForCreatedBy) {
		this.classSectionsForCreatedBy = classSectionsForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByLastUpdatedBy")
	public Set<Department> getDepartmentsForLastUpdatedBy() {
		return this.departmentsForLastUpdatedBy;
	}

	public void setDepartmentsForLastUpdatedBy(
			Set<Department> departmentsForLastUpdatedBy) {
		this.departmentsForLastUpdatedBy = departmentsForLastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByLastUpdatedBy")
	public Set<SystemUser> getSystemUsersForLastUpdatedBy() {
		return this.systemUsersForLastUpdatedBy;
	}

	public void setSystemUsersForLastUpdatedBy(
			Set<SystemUser> systemUsersForLastUpdatedBy) {
		this.systemUsersForLastUpdatedBy = systemUsersForLastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByCreatedBy")
	public Set<SystemUser> getSystemUsersForCreatedBy() {
		return this.systemUsersForCreatedBy;
	}

	public void setSystemUsersForCreatedBy(
			Set<SystemUser> systemUsersForCreatedBy) {
		this.systemUsersForCreatedBy = systemUsersForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByLastUpdatedBy")
	public Set<Student> getStudentsForLastUpdatedBy() {
		return this.studentsForLastUpdatedBy;
	}

	public void setStudentsForLastUpdatedBy(
			Set<Student> studentsForLastUpdatedBy) {
		this.studentsForLastUpdatedBy = studentsForLastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByCreatedBy")
	public Set<Student> getStudentsForCreatedBy() {
		return this.studentsForCreatedBy;
	}

	public void setStudentsForCreatedBy(Set<Student> studentsForCreatedBy) {
		this.studentsForCreatedBy = studentsForCreatedBy;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByLastUpdatedBy")
//	public Set<StudentClassSection> getStudentClassSectionsForLastUpdatedBy() {
//		return this.studentClassSectionsForLastUpdatedBy;
//	}
//
//	public void setStudentClassSectionsForLastUpdatedBy(
//			Set<StudentClassSection> studentClassSectionsForLastUpdatedBy) {
//		this.studentClassSectionsForLastUpdatedBy = studentClassSectionsForLastUpdatedBy;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByCreatedBy")
	public Set<Classes> getClassesesForCreatedBy() {
		return this.classesesForCreatedBy;
	}

	public void setClassesesForCreatedBy(Set<Classes> classesesForCreatedBy) {
		this.classesesForCreatedBy = classesesForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByLastUpdatedBy")
	public Set<Classes> getClassesesForLastUpdatedBy() {
		return this.classesesForLastUpdatedBy;
	}

	public void setClassesesForLastUpdatedBy(
			Set<Classes> classesesForLastUpdatedBy) {
		this.classesesForLastUpdatedBy = classesesForLastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByCreatedBy")
	public Set<Department> getDepartmentsForCreatedBy() {
		return this.departmentsForCreatedBy;
	}

	public void setDepartmentsForCreatedBy(
			Set<Department> departmentsForCreatedBy) {
		this.departmentsForCreatedBy = departmentsForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByCreatedBy")
	public Set<Employee> getEmployeesForCreatedBy() {
		return this.employeesForCreatedBy;
	}

	public void setEmployeesForCreatedBy(Set<Employee> employeesForCreatedBy) {
		this.employeesForCreatedBy = employeesForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByLastUpdatedBy")
	public Set<Employee> getEmployeesForLastUpdatedBy() {
		return this.employeesForLastUpdatedBy;
	}

	public void setEmployeesForLastUpdatedBy(
			Set<Employee> employeesForLastUpdatedBy) {
		this.employeesForLastUpdatedBy = employeesForLastUpdatedBy;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemUserByCreatedBy")
//	public Set<StudentClassSection> getStudentClassSectionsForCreatedBy() {
//		return this.studentClassSectionsForCreatedBy;
//	}
//
//	public void setStudentClassSectionsForCreatedBy(
//			Set<StudentClassSection> studentClassSectionsForCreatedBy) {
//		this.studentClassSectionsForCreatedBy = studentClassSectionsForCreatedBy;
//	}

}
