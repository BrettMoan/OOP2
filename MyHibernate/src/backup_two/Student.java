package backup_two;
// default package
// Generated Nov 20, 2014 1:09:15 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Student generated by hbm2java
 */
@Entity
@Table(name = "student", catalog = "hibernate")
public class Student implements java.io.Serializable {

	private Integer studentId;
	private SystemUser systemUserByCreatedBy;
	private SystemUser systemUserByLastUpdatedBy;
	private String fullName;
	private Integer age;
	private String email;
	private String password;
	private Date creationTimestamp;
	private Date lastUpdatedTimestamp;
	private Set<StudentClassSection> studentClassSections = new HashSet<StudentClassSection>(
			0);

	public Student() {
	}

	public Student(SystemUser systemUserByCreatedBy,
			SystemUser systemUserByLastUpdatedBy, String fullName,
			String email, String password) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.fullName = fullName;
		this.email = email;
		this.password = password;
	}

	public Student(SystemUser systemUserByCreatedBy,
			SystemUser systemUserByLastUpdatedBy, String fullName, Integer age,
			String email, String password, Date creationTimestamp,
			Date lastUpdatedTimestamp,
			Set<StudentClassSection> studentClassSections) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
		this.fullName = fullName;
		this.age = age;
		this.email = email;
		this.password = password;
		this.creationTimestamp = creationTimestamp;
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
		this.studentClassSections = studentClassSections;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "student_id", unique = true, nullable = false)
	public Integer getStudentId() {
		return this.studentId;
	}

	public void setStudentId(Integer studentId) {
		this.studentId = studentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public SystemUser getSystemUserByCreatedBy() {
		return this.systemUserByCreatedBy;
	}

	public void setSystemUserByCreatedBy(SystemUser systemUserByCreatedBy) {
		this.systemUserByCreatedBy = systemUserByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "last_updated_by", nullable = false)
	public SystemUser getSystemUserByLastUpdatedBy() {
		return this.systemUserByLastUpdatedBy;
	}

	public void setSystemUserByLastUpdatedBy(
			SystemUser systemUserByLastUpdatedBy) {
		this.systemUserByLastUpdatedBy = systemUserByLastUpdatedBy;
	}

	@Column(name = "full_name", nullable = false, length = 100)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "age")
	public Integer getAge() {
		return this.age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	@Column(name = "email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_timestamp", length = 19)
	public Date getCreationTimestamp() {
		return this.creationTimestamp;
	}

	public void setCreationTimestamp(Date creationTimestamp) {
		this.creationTimestamp = creationTimestamp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_timestamp", length = 19)
	public Date getLastUpdatedTimestamp() {
		return this.lastUpdatedTimestamp;
	}

	public void setLastUpdatedTimestamp(Date lastUpdatedTimestamp) {
		this.lastUpdatedTimestamp = lastUpdatedTimestamp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "student")
	public Set<StudentClassSection> getStudentClassSections() {
		return this.studentClassSections;
	}

	public void setStudentClassSections(
			Set<StudentClassSection> studentClassSections) {
		this.studentClassSections = studentClassSections;
	}

}
